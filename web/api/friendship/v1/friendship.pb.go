// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: api/friendship/v1/friendship.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FrienddhipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FromUserId uint64 `protobuf:"varint,2,opt,name=fromUserId,proto3" json:"fromUserId,omitempty"`
	ToUserId   uint64 `protobuf:"varint,3,opt,name=toUserId,proto3" json:"toUserId,omitempty"`
}

func (x *FrienddhipInfo) Reset() {
	*x = FrienddhipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_friendship_v1_friendship_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrienddhipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrienddhipInfo) ProtoMessage() {}

func (x *FrienddhipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_friendship_v1_friendship_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrienddhipInfo.ProtoReflect.Descriptor instead.
func (*FrienddhipInfo) Descriptor() ([]byte, []int) {
	return file_api_friendship_v1_friendship_proto_rawDescGZIP(), []int{0}
}

func (x *FrienddhipInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FrienddhipInfo) GetFromUserId() uint64 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

func (x *FrienddhipInfo) GetToUserId() uint64 {
	if x != nil {
		return x.ToUserId
	}
	return 0
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserId uint64 `protobuf:"varint,1,opt,name=fromUserId,proto3" json:"fromUserId,omitempty"`
	ToUserId   uint64 `protobuf:"varint,2,opt,name=toUserId,proto3" json:"toUserId,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_friendship_v1_friendship_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_friendship_v1_friendship_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_api_friendship_v1_friendship_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRequest) GetFromUserId() uint64 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

func (x *CreateRequest) GetToUserId() uint64 {
	if x != nil {
		return x.ToUserId
	}
	return 0
}

type CreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendshipInfo *FrienddhipInfo `protobuf:"bytes,1,opt,name=friendshipInfo,proto3" json:"friendshipInfo,omitempty"`
}

func (x *CreateReply) Reset() {
	*x = CreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_friendship_v1_friendship_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReply) ProtoMessage() {}

func (x *CreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_friendship_v1_friendship_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReply.ProtoReflect.Descriptor instead.
func (*CreateReply) Descriptor() ([]byte, []int) {
	return file_api_friendship_v1_friendship_proto_rawDescGZIP(), []int{2}
}

func (x *CreateReply) GetFriendshipInfo() *FrienddhipInfo {
	if x != nil {
		return x.FriendshipInfo
	}
	return nil
}

type FollowingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserId uint64 `protobuf:"varint,1,opt,name=fromUserId,proto3" json:"fromUserId,omitempty"`
}

func (x *FollowingRequest) Reset() {
	*x = FollowingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_friendship_v1_friendship_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowingRequest) ProtoMessage() {}

func (x *FollowingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_friendship_v1_friendship_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowingRequest.ProtoReflect.Descriptor instead.
func (*FollowingRequest) Descriptor() ([]byte, []int) {
	return file_api_friendship_v1_friendship_proto_rawDescGZIP(), []int{3}
}

func (x *FollowingRequest) GetFromUserId() uint64 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

type FollowingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendshipInfo []*FrienddhipInfo `protobuf:"bytes,1,rep,name=friendshipInfo,proto3" json:"friendshipInfo,omitempty"`
}

func (x *FollowingReply) Reset() {
	*x = FollowingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_friendship_v1_friendship_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowingReply) ProtoMessage() {}

func (x *FollowingReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_friendship_v1_friendship_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowingReply.ProtoReflect.Descriptor instead.
func (*FollowingReply) Descriptor() ([]byte, []int) {
	return file_api_friendship_v1_friendship_proto_rawDescGZIP(), []int{4}
}

func (x *FollowingReply) GetFriendshipInfo() []*FrienddhipInfo {
	if x != nil {
		return x.FriendshipInfo
	}
	return nil
}

type FollowerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUserId uint64 `protobuf:"varint,1,opt,name=toUserId,proto3" json:"toUserId,omitempty"`
}

func (x *FollowerRequest) Reset() {
	*x = FollowerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_friendship_v1_friendship_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowerRequest) ProtoMessage() {}

func (x *FollowerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_friendship_v1_friendship_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowerRequest.ProtoReflect.Descriptor instead.
func (*FollowerRequest) Descriptor() ([]byte, []int) {
	return file_api_friendship_v1_friendship_proto_rawDescGZIP(), []int{5}
}

func (x *FollowerRequest) GetToUserId() uint64 {
	if x != nil {
		return x.ToUserId
	}
	return 0
}

type FollowerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendshipInfo []*FrienddhipInfo `protobuf:"bytes,1,rep,name=friendshipInfo,proto3" json:"friendshipInfo,omitempty"`
}

func (x *FollowerReply) Reset() {
	*x = FollowerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_friendship_v1_friendship_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowerReply) ProtoMessage() {}

func (x *FollowerReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_friendship_v1_friendship_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowerReply.ProtoReflect.Descriptor instead.
func (*FollowerReply) Descriptor() ([]byte, []int) {
	return file_api_friendship_v1_friendship_proto_rawDescGZIP(), []int{6}
}

func (x *FollowerReply) GetFriendshipInfo() []*FrienddhipInfo {
	if x != nil {
		return x.FriendshipInfo
	}
	return nil
}

var File_api_friendship_v1_friendship_proto protoreflect.FileDescriptor

var file_api_friendship_v1_friendship_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70,
	0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x5c, 0x0a, 0x0e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x64, 0x68, 0x69, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x4b, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x0e, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x64, 0x68, 0x69, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x32, 0x0a, 0x10, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x0e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x0e, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x64, 0x68, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x2d, 0x0a, 0x0f, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x56,
	0x0a, 0x0d, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x45, 0x0a, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x64, 0x68,
	0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68,
	0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xce, 0x02, 0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x68, 0x69, 0x70, 0x12, 0x68, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x12, 0x1c, 0x2e, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31,
	0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2f, 0x3a, 0x01, 0x2a, 0x12,
	0x6c, 0x0a, 0x0a, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x2e,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x68, 0x69, 0x70, 0x2f, 0x69, 0x6e, 0x67, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x68, 0x0a,
	0x09, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17,
	0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70,
	0x2f, 0x65, 0x72, 0x73, 0x3a, 0x01, 0x2a, 0x42, 0x55, 0x0a, 0x1c, 0x64, 0x65, 0x76, 0x2e, 0x6b,
	0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x68, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x42, 0x11, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x20, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_friendship_v1_friendship_proto_rawDescOnce sync.Once
	file_api_friendship_v1_friendship_proto_rawDescData = file_api_friendship_v1_friendship_proto_rawDesc
)

func file_api_friendship_v1_friendship_proto_rawDescGZIP() []byte {
	file_api_friendship_v1_friendship_proto_rawDescOnce.Do(func() {
		file_api_friendship_v1_friendship_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_friendship_v1_friendship_proto_rawDescData)
	})
	return file_api_friendship_v1_friendship_proto_rawDescData
}

var file_api_friendship_v1_friendship_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_friendship_v1_friendship_proto_goTypes = []interface{}{
	(*FrienddhipInfo)(nil),   // 0: friendship.v1.FrienddhipInfo
	(*CreateRequest)(nil),    // 1: friendship.v1.CreateRequest
	(*CreateReply)(nil),      // 2: friendship.v1.CreateReply
	(*FollowingRequest)(nil), // 3: friendship.v1.FollowingRequest
	(*FollowingReply)(nil),   // 4: friendship.v1.FollowingReply
	(*FollowerRequest)(nil),  // 5: friendship.v1.FollowerRequest
	(*FollowerReply)(nil),    // 6: friendship.v1.FollowerReply
}
var file_api_friendship_v1_friendship_proto_depIdxs = []int32{
	0, // 0: friendship.v1.CreateReply.friendshipInfo:type_name -> friendship.v1.FrienddhipInfo
	0, // 1: friendship.v1.FollowingReply.friendshipInfo:type_name -> friendship.v1.FrienddhipInfo
	0, // 2: friendship.v1.FollowerReply.friendshipInfo:type_name -> friendship.v1.FrienddhipInfo
	1, // 3: friendship.v1.Friendship.CreateFriendship:input_type -> friendship.v1.CreateRequest
	3, // 4: friendship.v1.Friendship.Followings:input_type -> friendship.v1.FollowingRequest
	5, // 5: friendship.v1.Friendship.Followers:input_type -> friendship.v1.FollowerRequest
	2, // 6: friendship.v1.Friendship.CreateFriendship:output_type -> friendship.v1.CreateReply
	4, // 7: friendship.v1.Friendship.Followings:output_type -> friendship.v1.FollowingReply
	6, // 8: friendship.v1.Friendship.Followers:output_type -> friendship.v1.FollowerReply
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_friendship_v1_friendship_proto_init() }
func file_api_friendship_v1_friendship_proto_init() {
	if File_api_friendship_v1_friendship_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_friendship_v1_friendship_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrienddhipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_friendship_v1_friendship_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_friendship_v1_friendship_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_friendship_v1_friendship_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_friendship_v1_friendship_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_friendship_v1_friendship_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_friendship_v1_friendship_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_friendship_v1_friendship_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_friendship_v1_friendship_proto_goTypes,
		DependencyIndexes: file_api_friendship_v1_friendship_proto_depIdxs,
		MessageInfos:      file_api_friendship_v1_friendship_proto_msgTypes,
	}.Build()
	File_api_friendship_v1_friendship_proto = out.File
	file_api_friendship_v1_friendship_proto_rawDesc = nil
	file_api_friendship_v1_friendship_proto_goTypes = nil
	file_api_friendship_v1_friendship_proto_depIdxs = nil
}
